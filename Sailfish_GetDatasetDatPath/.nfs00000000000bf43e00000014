<tool id="SailfishGetDatasetDatPath" name="SailfishGetDatasetDatPath" version="0.01">
<description>get datfile-fullpath from Sailfish output</description>

<command interpreter="python">

        SailfishGetDatasetDatPath.py --script_path "$runMe" --interpreter "python" 
            --tool_name "SailfishGetDatasetDatPath"   --output_dir "./" --output_tab "$tab_file" 
</command>
<inputs>
<param name="job_name" type="text" label="Supply a name for the outputs to remind you what they contain" value="SailfishGetDatasetDatPath"/> 

</inputs>
<outputs>
 <data format="tabular" name="tab_file" label="${job_name}"/>

</outputs>
<configfiles>
<configfile name="runMe">
# -*- coding: utf-8 -*-
import sys
import os
print "python :" + sys.version
import ConfigParser

sys.path.append('/usr/lib/python2.6/site-packages')
import dateutil.tz
import bioblend
from bioblend.galaxy import GalaxyInstance
from bioblend.galaxy.histories import HistoryClient
from bioblend.galaxy.datasets import DatasetClient

sys.path.append('/usr/lib64/python2.6/site-packages')
import pandas

print u"Sailfish_GetDatasetDatPath.py Started......"

inp = sys.argv[1]
outp = sys.argv[2]
print u"inp: " + inp
print u"outp: " + outp

if not os.path.isfile('../../../../local_setting.ini'):
    raise Exception, 'local_setting.ini(API_KEY) is not found.'

def findDatfilePath(dClient, h_list, hname):

    dset_list = [dset for dset in [dClient.show_dataset(hst['id']) for hst in h_list]
                    if (dset['file_ext'] == 'txt' or dset['file_ext'] == 'txt') and '.dat' in dset['file_name']]
    dset_df = pandas.DataFrame(dset_list)
    #print dset_df.head(3)
    dset_path = dset_df[["hid","name","file_name"]]
    dset_path['History Name >!!CAUTION!! If name is WRONG, Please logoff & login again.)'] = hname
    print dset_path.head(3)

    return dset_path

def dataout(data, filename):
    data.to_csv(filename, sep="\t")

def get_apikey():
    config = ConfigParser.SafeConfigParser()
    config.read('../../../../local_setting.ini')
    key = config.get('admin','api_key')
    return key

def main():
    GALAXY_URL = 'http://127.0.0.1:8080/'
    API_KEY = get_apikey()
    gInstance = GalaxyInstance(url = GALAXY_URL, key=API_KEY)
    hClient = HistoryClient(gInstance)
    dClient = DatasetClient(gInstance)

    hst = hClient.get_current_history()
    hst_cont_all = hClient.show_history(hst['id'], deleted=False, contents=True, visible=True, details=True)
    hst_cont_ok = [x for x in hst_cont_all if 'quant_bias_corrected' in x['name'] and x['deleted'] == False and x['state'] == 'ok' ]
    if (len(hst_cont_ok) &gt; 0):
        path_list = findDatfilePath(dClient, hst_cont_ok, hst['name'])
        dataout(path_list, outp)
    else:
        print 'Sailfish output &gt;&gt;&gt; not found.'

if __name__ == '__main__':
        main()

print u"....All Done. End of Script"
</configfile>
</configfiles>


        <tests>
        <test>
        <param name="input1" value="SailfishGetDatasetDatPath_test1_input.xls" ftype="None"/>
        <param name="job_name" value="test1"/>
        <param name="runMe" value="$runMe"/>
        <output name="tab_file" file="SailfishGetDatasetDatPath_test1_output.xls" ftype="tabular"/>
        </test>
        </tests>
        

<help>

This tool get fullpath and make tablur file from Sailfish output results in current history.

**Attribution**
This Galaxy tool was created by mika.yoshimura@riken.jp at 30/01/2015 23:49:04
using the Galaxy Tool Factory.

See https://bitbucket.org/fubar/galaxytoolfactory for details of that project
Please cite: Creating re-usable tools from scripts: The Galaxy Tool Factory. Ross Lazarus; Antony Kaspi; Mark Ziemann; The Galaxy Team. 
Bioinformatics 2012; doi: 10.1093/bioinformatics/bts573

</help>
<citations>
    
    <citation type="doi">10.1093/bioinformatics/bts573</citation>
</citations>
</tool>
