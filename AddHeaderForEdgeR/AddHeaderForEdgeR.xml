<tool id="AddHeaderForEdgeR" name="AddHeaderForEdgeR" version="0.01">
<description>add group information header for edgeR</description>

<command interpreter="python">

        AddHeaderForEdgeR.py --script_path "$runMe" --interpreter "python" 
            --tool_name "AddHeaderForEdgeR" --input_tab "$input1"   --output_dir "./" --output_tab "$tab_file" --input_gname "$input_gname" --input_rep_str "$input_rep_str"
</command>
<inputs>
<param name="input1"  type="data" format="tabular" label="Select a suitable input file from your history"/> 
<param name="job_name" type="text" label="Supply a name for the outputs to remind you what they contain" value="AddHeaderForEdgeR"/>
<param name="input_gname"  type="text" label="input groupID">
    <validator type="empty_field" message="The group ID is required field"/>
</param>_
<param name="input_rep_str"  type="text" label="input replication count">_
    <validator type="empty_field" message="The replication count is required field"/>
</param>
</inputs>
<outputs>
 <data format="tabular" name="tab_file" label="${job_name}"/>

</outputs>
<configfiles>
<configfile name="runMe">
# -*- coding: utf-8 -*-
import sys
import os
print "python :" + sys.version

sys.path.append('/usr/lib/python2.6/site-packages')
import dateutil.tz

sys.path.append('/usr/lib64/python2.6/site-packages')
import pandas as pd
pd.set_option('multi_sparse', False)

print u"AddHeaderForEdgeR.py Started......"

if len(sys.argv[3].strip())==0 or sys.argv[3].strip()=="None":
    raise Exception, ' The group ID is empty '

if len(sys.argv[4].strip())==0 or sys.argv[4].strip()=="None":
    raise Exception, ' The replication count is empty '

inp = sys.argv[1]
print u"inp: " + inp
outp = sys.argv[2]
print u"outp: " + outp
gname = sys.argv[3]
print u"groupname: " + gname
rep_str = sys.argv[4]
print u"number of replicate: " + rep_str
rep = int(rep_str) if int(rep_str) > 0 else 1

def makeGroupname():
        glist = [ u"G" + str((x + 1)) + u":" + y for x,y in enumerate(gname.split(",")) ]
        glist_rep = []
        [ glist_rep.extend(glist[:]) for i in range(rep - 1) ]

        header_name = glist + glist_rep
        header_name.append("#")
        return sorted(header_name)

def dataout(data, filename):
        data.to_csv(filename, sep="\t", index=False, skip_blank_lines=True)

def main():
        try:
                df = pd.read_csv(inp, delimiter='\t')
                df = df.rename(columns={'target_id' : '#Feature'})
                print df.head(3)

                g_header = makeGroupname()
                print g_header
                df.columns = pd.MultiIndex.from_tuples(zip(g_header, df.columns))
                print df.columns
                print df.head(3)

                dataout(df, outp)

        except IndexError:
                sys.exit(1)

if __name__ == '__main__':
        main()

print u"....All Done. End of Script"
</configfile>
</configfiles>


        <tests>
        <test>
        <param name="input1" value="AddHeaderForEdgeR_test1_input.xls" ftype="tabular"/>
        <param name="job_name" value="test1"/>
        <param name="runMe" value="$runMe"/>
        <output name="tab_file" file="AddHeaderForEdgeR_test1_output.xls" ftype="tabular"/>
        </test>
        </tests>
        

<help>

This tool add group information header to count-data table for Galaxy edgeR-tool.

**Attribution**
This Galaxy tool was created by mika.yoshimura@riken.jp at 30/01/2015 16:38:14
using the Galaxy Tool Factory.

See https://bitbucket.org/fubar/galaxytoolfactory for details of that project
Please cite: Creating re-usable tools from scripts: The Galaxy Tool Factory. Ross Lazarus; Antony Kaspi; Mark Ziemann; The Galaxy Team. 
Bioinformatics 2012; doi: 10.1093/bioinformatics/bts573

</help>
<citations>
    
    <citation type="doi">10.1093/bioinformatics/bts573</citation>
</citations>
</tool>
